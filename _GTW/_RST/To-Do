To-Do for package GTW.RST
=========================

- Versioning

  * Root: one per API version

- Statelessness

  * `last_cid` cannot be sent by client, changes with every `PUT` or `POST`

    + how does client the changed last_cid? does the client need to `GET`
      after each `PUT`

  * strict statelessness would mean that for `PUT` to an existing instance
    all attribute values need to be sent, even those that haven't changed

- Representation

  * representation specific URIs (see RiR07)

    + language

    + data foramat

- Resource.py

  * class hierarchy::

      _Base_
          Leaf
          _Node_
              Node
              Root

- MOM

  * App_Type ?

  * Scope ?

  * E_Type

- E_Type

- URI structure for E_Type, example: Auth.Account

  * .../Meta/Auth.Account/attribute

    GET     list of attribute descriptions

  * .../Meta/Auth.Account/doc

    GET     documentation for E_Type

  * .../Auth.Account/

    GET      list (of pids) of instances

    POST     pid of newly created instance

  * ...Auth.Account/?attribute=name

    GET     list of all unique values for the attribute `name`

  * ...Auth.Account/pid one Account instance with `pid`

    + Alias for another, canonical, URI .../<scope>/nnn

    GET      returns attribute values, last_cid

    HEAD     returns last_cid, anything else ???

    PUT      change object

    POST     change object

    DELETE   delete object

  * ...Auth.Account/pid/<name>

    GET      value of attribute `name` of instance `pid`

    PUT      change value of attribute `name` of instance `pid`

    DELETE   reset value of attribute `name` of instance `pid`, if possible

### __END__ _GTW/_RST/To-Do
