{#- jinja template: html/base.jnj -#}
{#
## Copyright (C) 2009-2011 Mag. Christian Tanzer All rights reserved
## Glasauergasse 32, A--1130 Wien, Austria. tanzer@swing.co.at
## ****************************************************************************
## This template is part of the package JNJ.
##
## This template is free software: you can redistribute it and/or modify
## it under the terms of the GNU Affero General Public License as published by
## the Free Software Foundation, either version 3 of the License, or
## (at your option) any later version.
##
## This template is distributed in the hope that it will be useful,
## but WITHOUT ANY WARRANTY; without even the implied warranty of
## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
## GNU Affero General Public License for more details.
##
## You should have received a copy of the GNU Affero General Public License
## along with this template. If not, see <http://www.gnu.org/licenses/>.
## ****************************************************************************
##
##++
## Name
##    html/base.jnj
##
## Purpose
##    Base template for HTML pages
##
## Revision Dates
##    29-Dec-2009 (CT) Creation
##    17-Mar-2010 (CT) `rel="canonical"` for `permalink` added
##     1-May-2010 (MG) `body` block added
##    11-Jun-2010 (CT) Use `X.link_stylesheet` instead of home-grown code
##    17-Aug-2010 (CT) s/headline/head_line/
##    24-Nov-2010 (CT) `nav_block` moved after `document`
##     7-Dec-2010 (CT) `media_item` factored and used for `Media.scripts`, too
##    15-Dec-2010 (CT) `exclude_robots` added
##     5-Jan-2011 (CT) Support `page.template.css_href`
##    31-May-2011 (CT) Take `template` from context, if possible
##                     (`dir_template` must NOT get the CSS of `page.template`)
##    26-Sep-2011 (MG) Handling of additional media of `template` added
##    26-Sep-2011 (MG) Make use of new `page.template_media` property
##                     (javascript, JS_On_Ready, ...)
##    27-Sep-2011 (MG) Use new `media_fragments` module
##    ««revision-date»»···
##--
#}

{%- import html_version as X -%}
{%- import "html/media_fragments.jnj" as MF with context %}
{%- import "html/navigation.jnj"      as NF with context %}
{%- call X.html (lang = page.language|default ("en")) -%}
  {%- if not page -%}{%- set page = NAV -%}{%- endif -%}
  {%- if not template -%}{%- set template = page.template -%}{%- endif -%}
  {%- call X.head () -%}
    {%- block head_elements -%}
      <meta http-equiv="Content-Type" content="text/html; charset={{ page.encoding|default ("iso-8859-15") }}" />
      {%- if page.exclude_robots %}
        <meta name="ROBOTS" content="NOINDEX, NOFOLLOW">
      {% endif -%}
      {% if page.permalink -%}
        {{ MF.permalink (page) }}
      {% endif %}
      {% block head_base_element %}{% endblock head_base_element %}
        {% block title %}
          <title>{{ page.h_title }}</title>
        {% endblock title -%}
      {%- block styles %}
        {%- if template.css_href %}
          {{ X.link_stylesheet (template.css_href) }}
        {%- else %}
          {{ MF.inline_CSS (page.template.CSS) }}
        {% endif -%}
        {%- if NAV._PM %}
          {{ MF.link_css (page.Media) }}
        {% endif -%}
        {{ MF.link_css (page.P_Media) }}
      {%- endblock styles %}
        {%- block scripts %}
          {%- if NAV._PM %}
            {{ MF.scripts (page.Media) }}
          {% endif -%}
          {{ MF.scripts (page.P_Media) }}
          {%- if NAV._PM %}
            {{ MF.js_on_ready (page.Media )}}
          {% endif %}
          {{ MF.js_on_ready (page.P_Media) }}
        {%- endblock scripts -%}
      {%- block related_links -%}
        {%- if NAV._PM %}
          {{ MF.link_rel (page.Media) }}
        {% endif -%}
        {{ MF.link_rel (page.P_Media) }}
      {%- endblock related_links -%}
      {%- block meta_elements -%}
        <meta name="copyright" content="{{ page.copyright.year }} {{ page.copyright.holder }}" />
        <meta name="generator" content="GTW, JNJ, Jinja2" />
        {{ X.meta_content_url (page.permalink) }}
      {%- endblock meta_elements -%}
      {{ page.add_headers|safe }}
    {%- endblock head_elements %}
  {%- endcall %} {# X.head #}
  <body {% if page.document_class %}class="{{ page.document_class }}" {% endif %}{{ page.body_attr|safe }} {%- block body_attrs %}{% endblock %}>
    {%- block body -%}
    {% call X.header (id = "header", class = "pg_head") -%}
      {%- block body_header %}{% endblock body_header -%}
    {% endcall %} {# X.header #}
    <div id="main" class="pg_main">
      <div id="document" class="pg_body">
        {%- block notifications -%}
          {%- if notifications %}
            <div class="notifications">
              {{- notifications.discarge ("<p>", "</p><p>", "</p>") -}}
            </div>
          {% endif -%}
        {%- endblock notifications -%}
        {%- block body_headline %}
          {%- if page.head_line %}
            <h1 class="headline{% if page.headline_class %} {{ page.headline_class }}{% endif %}">{{ page.head_line|safe }}</h1>
          {% endif -%}
        {%- endblock body_headline %}
        {% block document %}{% endblock -%}
      </div> {# #document .body #}
      {%- block nav_block -%}
        {% call X.nav (id = "navigate", class="pg_nav") -%}
          {%- block navigate -%}
            {% call NF.section (page.top.own_links, "Navigation") -%}
              {{ NF.calendar (page) }}
            {% endcall %} {# section #}
          {%- endblock -%}
        {%- endcall %} {# X.nav #}
      {%- endblock nav_block -%}
    </div> {# #main .main #}
    {% call X.footer (id = "footer", class="pg_foot") -%}
      {%- block body_footer %}{% endblock body_footer -%}
    {%- endcall -%} {# X.footer #}
    {%- endblock body -%}
  </body>
{%- endcall -%} {#- X.html -#}
{#- __END__ jinja template: html/base.jnj -#}


{#-
## How to test:

from _JNJ.Environment import HTML
from _TFL.Record import *

env5 = HTML ()
envx = HTML (version = "html/x.jnj")
page = Record (copyright = None, Media = None, NAV = None, top = None)

t5 = env5.get_template ("html/base.jnj")
print t5.render (page = page)

tx = envx.get_template ("html/base.jnj")
print tx.render (page = page)

-#}
