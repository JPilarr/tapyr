{#- jinja template: html/e_type.m.jnj -#}
{#
## Copyright (C) 2011-2015 Mag. Christian Tanzer All rights reserved
## Glasauergasse 32, A--1130 Wien, Austria. tanzer@swing.co.at
## #*** <License> ************************************************************#
## This template is part of the package JNJ.
##
## This template is licensed under the terms of the BSD 3-Clause License
## <http://www.c-tanzer.at/license/bsd_3c.html>.
## #*** </License> ***********************************************************#
##
##++
## Name
##    html/e_type.m.jnj
##
## Purpose
##    Macros for E_Type pages
##
## Revision Dates
##    21-Nov-2011 (CT) Creation (factored from html/e_type_admin.jnj)
##    21-Nov-2011 (CT) Continue `qr_control` (change `order_by`)
##    22-Nov-2011 (CT) Continue `qr_control`..
##    25-Nov-2011 (CT) Change `admin_table` to not put field values into `<a>`
##    26-Nov-2011 (CT) Continue `qr_control`....
##                     (`button_types`, `qr_button_first`, ...)
##    28-Nov-2011 (CT) Continue `qr_control` (`order_by_form`)
##    29-Nov-2011 (CT) Continue `qr_control` (`order_by_form`...)
##    30-Nov-2011 (CT) Continue `qr_control` (`qr_button`...)
##     4-Dec-2011 (CT) Continue `qr_control`
##                     (Change `attr_filter_tr` to use `af.attr.input_widget`)
##     7-Dec-2011 (CT) Continue `qr_control`
##                     (factor `attr_filter_table`, add `entity_selector_form`)
##    12-Dec-2011 (CT) Continue `qr_control` (`af.Class`, `need_op`)
##    16-Jan-2012 (CT) Continue `qr_control` (`select_attr_form`, `Config`)
##    18-Jan-2012 (CT) Continue `qr_control` (Use `GTW.attr_join` for `fields`)
##    19-Mar-2012 (CT) Change `obj_button` to use class `ui-state-default`
##     6-Dec-2012 (CT) Factor `obj_create_button`
##    14-Dec-2012 (CT) Add `vip_button`
##     3-Apr-2013 (CT) Use `af.ui_type_name` in `entity_selector_form`
##     3-Apr-2013 (CT) Split hidden `input` field "__attribute_selector_for__"
##                     into two: "__esf_for_attr__"  and "__esf_for_type__"
##     3-Apr-2013 (CT) Add `entity_selector_form_p`
##     6-Oct-2013 (CT) Add `with context` to import of `form.jnj`
##    11-Mar-2014 (CT) Add guard `skip_qr_attr_select` to `qr_control`
##    11-Mar-2014 (CT) Add guard for `href_change`, `href_delete` to
##                     `admin_table`; add `href_display`
##    14-Mar-2014 (CT) Add and use `nav_buttons`
##    24-Aug-2014 (CT) Factor `esf_title`; DRY `result` of `esf_title`
##    15-Sep-2014 (CT) Change `entity_selector_form` to use pure forms,
##                     `attr_filter_pure` and `_qr_button_pure`
##    30-Oct-2014 (CT) Factor `e_type_q.m.jnj`, switch to pure buttons
##     2-Dec-2014 (CT) Remove class `button` from `direction` and `disabler`
##     3-Dec-2014 (CT) Factor `esf_field`
##    ««revision-date»»···
##--
#}

{%- import (html_version or "html/5.jnj") as X -%}
{%- import "html/form.jnj" as Form with context %}
{%- import "html/e_type_q.m.jnj" as ETQ with context %}
{%- import "STD::html/navigation.jnj" as NT with context %}

{%- set attr_filter_pure = ETQ.attr_filter_field %}

{%- macro entity_selector_form (page, af, form_class="") -%}
  <form class = "{{ ('pure-form pure-form-aligned ' + form_class).strip () }}" {# -#}
      title="{{ esf_title (af) }}"{# -#}
  >
    <input type="hidden" name="__esf_for_attr__" value="{{ af.id }}">
    <input type="hidden" name="__esf_for_type__" value="{{ af.type_name }}">
    {% for f in af.filters %}
      {{- esf_field (page, f) }}
    {% endfor -%}
    <div class="pure-controls">
      {{ ETQ.button
          ( page
          , name  = GTW._  ("Apply")
          , title = GTW._T ("Use the currently selected %s") % af.ui_type_name
          , typ   = "submit"
          )
      -}}
      {{ ETQ.button
          ( page
          , name  = GTW._  ("Clear")
          , title = GTW._T ("Reset fields")
          )
      -}}
      {{ ETQ.button
          ( page
          , name  = GTW._  ("Cancel")
          , title = GTW._T ("Leave form without selecting %s") % af.ui_type_name
          )
      -}}
    </div>
  </form>
{%- endmacro -%} {#- entity_selector_form -#}

{%- macro entity_selector_form_p (page, af) -%}
  <div title="{{ esf_title (af) }}">
    <h2>
      {{- GTW._T ("Select one of the types below") -}}
    </h2>
    <div class="ESF-Polymorphic">
      {%- for cf in af.filters_np %}
        <h3 title="{{ esf_title (cf) }}">
          <a href="#"> {#- remove `<a>` after upgrading to jQueryUI 1.9+ -#}
            {{- GTW._T ("Select a %s") % cf.ui_type_name -}}
          </a>
        </h3>
        {{ entity_selector_form (page, cf, cf.type_name) }}
      {% endfor -%}
    </div>
  </div>
{%- endmacro -%} {#- entity_selector_form_p -#}

{%- macro esf_field (page, af) -%}
  {%- set cls   = GTW.filtered_join
      ( " "
      , ("pure-control-group", kwargs.pop ("class", "attr-filter"))
      )
  %}
  <div class="{{ cls }}" title="{{ af.ui_name }}">
    <label for="{{ af.id }}">{# -#}
      {{ af.ui_name }}{# -#}
    </label>
    <span class="value{%- if af.Class %} {{ af.Class }}{%- endif -%}">
      {{ GTW.call_macro (af.attr.input_widget, af, class = "value") -}}
    </span>
    <a class="disabler"></a>
  </div>
{%- endmacro -%} {#- esf_field -#}

{%- macro esf_title (af) -%}
  {%- set type_name = af.ui_type_name %}
  {%- set attr_name = af.ui_name %}
  {%- if type_name == attr_name %}
    {{- GTW._T ("Select %s ") % (attr_name, ) -}}
  {%- else %}
    {{- GTW._T ("Select %s for attribute %s") % (type_name, attr_name) -}}
  {% endif -%}
{%- endmacro -%} {#- esf_title -#}

{%- macro nav_buttons (page, fields, objects) -%}
  {%- set nof = GTW.len (fields)  %}
  {%- set start_tag = '<tfoot class="rel-nav"><tr><td colspan="%s">'
      % (nof + 2, )
  %}
  {%- set end_tag = "</td></tr></tfoot>" %}
  {{ NT.rel_nav_buttons (page, start_tag, end_tag) }}
{%- endmacro -%} {#- nav_buttons -#}

{%- macro obj_button (page, E_Type, tag, href, name, desc, icon, kind, a_class=None) -%}
  <{{ tag }} class="cmd-button {{ kind }}">
    <b class="ui-state-default">
      <a href="{{ href }}" title="{{ desc }} {{ name }}"
         class="ui-icon ui-icon-{{ icon }}{%- if a_class %} {{ a_class }}{% endif -%}"
      >{{ desc }}</a>
    </b>
  </{{ tag }}>
{%- endmacro -%} {#- obj_button -#}

{%- macro obj_create_button (page, E_Type, tag) -%}
  {{ obj_button (page, E_Type, tag, page.href_create (), GTW._T (E_Type.ui_name), GTW._T ("Create new object"), "circle-plus", "add") }}
{%- endmacro -%} {#- obj_create_button -#}

{%- macro order_by_form (page) -%}
  <form class = "QR order-by" {# -#}
      title="{{ GTW._T ("Order-by Criteria") }}"{# -#}
  >
    <ul class="attributes"></ul>
    <ul class="prototype hidden">
      <li>
        <a class="disabler"></a>
        <a class="direction"></a>
        <b></b>
      </li>
    </ul>
    <div class="pure-controls">
      {{ ETQ.button
          ( page
          , name  = GTW._  ("Apply")
          , title = GTW._T
              ("Use set of criteria currently displayed in order-by form")
          )
      }}
      {{ ETQ.button
          ( page
          , name  = GTW._  ("Cancel")
          , title = GTW._T
              ("Leave form without changing set of order-by criteria")
          )
      }}
      {{ ETQ.button
          ( page
          , name  = GTW._  ("Clear")
          , title = GTW._T ("Reset order-by criteria")
          )
      }}
      {{ ETQ.button
          ( page
          , name  = GTW._  ("Add")
          , title = GTW._T ("Add an order-by criterion")
          , text  = GTW._T ("Add criterion")
          )
      }}
    </div>
  </form>
{%- endmacro -%} {#- order_by_form -#}

{%- macro qr_field (name, title, value, label) -%}
  {%- set caller = kwargs.pop ("caller",   None) -%}
  {%- set id = "QR-" + name %}
  <li title="{{ title }}">
    <label for="{{ id }}">
      {{ label or GTW._T (name.capitalize ()) }}
    </label>
    {%- if caller %}
      {{- caller () -}}
    {%- else %}
      {{ X.input.text
          ( id        = id
          , name      = name
          , value     = value
          )
      }}
    {%- endif -%}
  </li>
{%- endmacro -%} {#- qr_field -#}

{%- macro select_attr_form (page) -%}
  <form class = "QR select-attr" {# -#}
      title="{{ GTW._T ("Select the attributes to be displayed for each object") }}"{# -#}
  >
    <ul class="attributes"></ul>
    <ul class="prototype hidden">
      <li>
        <a class="disabler"></a>
        <b></b>
      </li>
    </ul>
    <div class="pure-controls">
      {{ ETQ.button
          ( page
          , class = "pure-button-primary"
          , name  = GTW._  ("Apply")
          , title = GTW._T ("Use set of attributes currently displayed in form")
          )
      }}
      {{ ETQ.button
          ( page
          , name  = GTW._  ("Cancel")
          , title = GTW._T
              ("Leave form without changing set of attributes to display")
          )
      }}
      {{ ETQ.button
          ( page
          , name  = GTW._  ("Clear")
          , title = GTW._T ("Reset form to default")
          )
      }}
      {{ ETQ.button
          ( page
          , name  = GTW._  ("Add")
          , title = GTW._T ("Add an attribute to be displayed")
          , text  = GTW._T ("Add attribute")
          )
      }}
    </div>
  </form>
{%- endmacro -%} {#- select_attr_form -#}

{%- macro vip_button (page, cls ="") -%}
  {%- if page.vip_button_p %}
    {%- set text = GTW._T ("Add new entry for %s") % page.E_Type.ui_name_T %}
    <p>
      <a href="{{ page.href_create () }}"{#--#}
         title="{{ text }}"{#--#}
         class="button vip {{ cls }}"{#--#}
      >{{ text }}</a>
    </p>
  {% endif -%}
{%- endmacro -%} {#- vip_button -#}

{%- macro admin_table (page, fields, objects) -%}
  {%- set E_Type = page.E_Type %}
  <table class="Object-List">
    <thead>
      <tr>
        {{ obj_create_button (page, E_Type, "th") }}
        {% for f in fields %}
          <th scope="col" title="{{ f.description }}">{{ f.ui_name }}</th>
        {% endfor %}
        {{ obj_create_button (page, E_Type, "th") }}
      </tr>
    </thead>
    {{ nav_buttons (page, fields, objects) }}
    <tbody>
      {% for o in objects %}
        {%- set href_change  = o.href_change  () %}
        {%- set href_delete  = o.href_delete  () %}
        {%- set href_display = o.href_display () %}
        <tr id="pk-{{ o.pid }}">
          {%- if href_change %}
            {{ obj_button (page, E_Type, "td", href_change, o.pid, GTW._T ("Change object"), "pencil", "change") }}
          {%- elif href_display %}
            {{ obj_button (page, E_Type, "td", href_display, o.pid, GTW._T ("Display object"), "circle-zoomin", "display") }}
          {%- else %}
            <td></td>
          {% endif -%}
          {% for f, v in o.fields %}
            {%- set css_class =
                   (" class=\"%s\"" % (f.css_class, )) if f.css_class else ""
            -%}
            <td{{ css_class }}>{{ f.as_html (o, v) }}</td>
          {% endfor %}
          {%- if href_delete %}
            {{ obj_button (page, E_Type, "td", href_delete, o.pid, GTW._T ("Delete object"), "trash", "delete", "delete") }}
          {%- else %}
            <td></td>
          {% endif -%}
        </tr>
      {% endfor %}
    </tbody>
  </table>
{%- endmacro -%} {#- admin_table -#}

{%- macro admin  (page, fields, objects) -%}
  {{ vip_button  (page, "top") }}
  {{ ETQ.qr_form (page, fields, page.query_restriction) }}
  {{ admin_table (page, fields, objects) }}
  {{ vip_button  (page, "bot") }}
{%- endmacro -%} {#- admin -#}

{#- __END__ jinja template: html/e_type.m.jnj -#}
