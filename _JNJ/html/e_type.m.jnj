{#- jinja template: _e_type.jnj -#}
{#
## Copyright (C) 2011-2013 Mag. Christian Tanzer All rights reserved
## Glasauergasse 32, A--1130 Wien, Austria. tanzer@swing.co.at
## #*** <License> ************************************************************#
## This template is part of the package JNJ.
##
## This template is free software: you can redistribute it and/or modify
## it under the terms of the GNU Affero General Public License as published by
## the Free Software Foundation, either version 3 of the License, or
## (at your option) any later version.
##
## This template is distributed in the hope that it will be useful,
## but WITHOUT ANY WARRANTY; without even the implied warranty of
## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
## GNU Affero General Public License for more details.
##
## You should have received a copy of the GNU Affero General Public License
## along with this template. If not, see <http://www.gnu.org/licenses/>.
## #*** </License> ***********************************************************#
##
##++
## Name
##    html/e_type.m.jnj
##
## Purpose
##    Macros for GTW.NAV.E_Type pages
##
## Revision Dates
##    21-Nov-2011 (CT) Creation (factored from html/e_type_admin.jnj)
##    21-Nov-2011 (CT) Continue `qr_control` (change `order_by`)
##    22-Nov-2011 (CT) Continue `qr_control`..
##    25-Nov-2011 (CT) Change `admin_table` to not put field values into `<a>`
##    26-Nov-2011 (CT) Continue `qr_control`....
##                     (`button_types`, `qr_button_first`, ...)
##    28-Nov-2011 (CT) Continue `qr_control` (`order_by_form`)
##    29-Nov-2011 (CT) Continue `qr_control` (`order_by_form`...)
##    30-Nov-2011 (CT) Continue `qr_control` (`qr_button`...)
##     4-Dec-2011 (CT) Continue `qr_control`
##                     (Change `attr_filter_tr` to use `af.attr.input_widget`)
##     7-Dec-2011 (CT) Continue `qr_control`
##                     (factor `attr_filter_table`, add `entity_selector_form`)
##    12-Dec-2011 (CT) Continue `qr_control` (`af.Class`, `need_op`)
##    16-Jan-2012 (CT) Continue `qr_control` (`select_attr_form`, `Config`)
##    18-Jan-2012 (CT) Continue `qr_control` (Use `GTW.attr_join` for `fields`)
##    19-Mar-2012 (CT) Change `obj_button` to use class `ui-state-default`
##     6-Dec-2012 (CT) Factor `obj_create_button`
##    14-Dec-2012 (CT) Add `vip_button`
##     3-Apr-2013 (CT) Use `af.ui_type_name` in `entity_selector_form`
##    ««revision-date»»···
##--
#}

{%- import html_version    as X -%}
{%- import "html/form.jnj" as Form %}

{%- macro attr_filter_table (filters, need_op = True) -%}
  <table class="{{ kwargs.get ("class", "attrs") }}">
    <tbody>
      {% for af in filters %}
        {{- attr_filter_tr (af, need_op) }}
      {% endfor -%}
    </tbody>
  </table>
{%- endmacro -%} {#- attr_filter_table -#}

{%- macro attr_filter_tr (af, need_op = True) -%}
  <tr title="{{ af.ui_name }}">
    <td class="name">
      <label for="{{ af.id }}">{{ af.ui_name }}</label>
    </td>
    {%- if need_op %}
      <td class="op" title="{{ af.op.desc }}">
        <a class="button">{{- af.op.label -}}</a>
      </td>
    {% endif -%}
    <td class="value{%- if af.Class %} {{ af.Class }}{%- endif -%}">
      {{ GTW.call_macro (af.attr.input_widget, af, class = "value") }}
    </td>
    <td class="disabler"></td>
  </tr>
{%- endmacro -%} {#- attr_filter_tr -#}

{%- macro entity_selector_form (page, af, filters) -%}
  <form class = "QR ES" {# -#}
      title="{{ GTW._T ("Select %s for attribute %s") % (af.ui_type_name, af.ui_name) }}"{# -#}
  >
    <input class="hidden" name="__attribute_selector_for__" {# -#}
      title="{{ af.type_name }}" {# -#}
      value="{{ af.id }}" {# -#}
    >
    {{ attr_filter_table (filters, need_op = False) }}
    {{ _qr_button
        ( GTW._  ("Apply")
        , GTW._T ("Use the currently selected %s") % af.ui_type_name
        , "submit"
        )
    }}
    {{ _qr_button
        ( GTW._  ("Cancel")
        , GTW._T ("Leave form without selecting %s") % af.ui_type_name
        )
    }}
    {{ _qr_button
        ( GTW._  ("Clear")
        , GTW._T ("Reset fields")
        )
    }}
  </form>
{%- endmacro -%} {#- entity_selector_form -#}

{%- macro obj_button (page, E_Type, tag, href, name, desc, icon, kind, a_class=None) -%}
  <{{ tag }} class="cmd-button {{ kind }}">
    <b class="ui-state-default">
      <a href="{{ href }}" title="{{ desc }} {{ name }}"
         class="ui-icon ui-icon-{{ icon }}{%- if a_class %} {{ a_class }}{% endif -%}"
      >{{ desc }}</a>
    </b>
  </{{ tag }}>
{%- endmacro -%} {#- obj_button -#}

{%- macro obj_create_button (page, E_Type, tag) -%}
  {{ obj_button (page, E_Type, tag, page.href_create (), GTW._T (E_Type.ui_name), GTW._T ("Create new object"), "plus", "add") }}
{%- endmacro -%} {#- obj_create_button -#}

{%- macro order_by_form () -%}
  <form class = "QR order-by" {# -#}
      title="{{ GTW._T ("Order-by Criteria") }}"{# -#}
  >
    <ul class="attributes"></ul>
    <ul class="prototype hidden">
      <li>
        <a class="button disabler"></a>
        <a class="button direction"></a>
        <b></b>
      </li>
    </ul>
    {{ _qr_button
        ( GTW._  ("Apply")
        , GTW._T ("Use set of criteria currently displayed in order-by form")
        )
    }}
    {{ _qr_button
        ( GTW._  ("Cancel")
        , GTW._T ("Leave form without changing set of order-by criteria")
        )
    }}
    {{ _qr_button
        ( GTW._  ("Clear")
        , GTW._T ("Reset order-by criteria")
        )
    }}
    {{ _qr_button
        ( GTW._  ("Add")
        , GTW._T ("Add an order-by criterion")
        , text = GTW._T ("Add criterion")
        )
    }}
  </form>
{%- endmacro -%} {#- order_by_form -#}

{%- macro _qr_button (name, title, typ, text, disabled = False) -%}
  {%- set NAME = name.upper () %}
  {%- set cls  = kwargs.pop ("class", "") %}
  {%- if disabled %}
    {%- set cls = GTW.filtered_join (" ", (cls, "disabled")) %}
  {% endif -%}
  <button name="{{ NAME }}" title="{{ title }}" type="{{ typ or "button" }}"
    {%- if cls %} class="{{ cls }}"{% endif %}
    {{ kwargs|xmlattr -}}
  >
    {{ text or GTW._T (name) }}
  </button>
{%- endmacro -%} {#- _qr_button -#}

{%- macro qr_button (page, name, title, text = None, disabled = False) -%}
  {%- set typ = page.button_types.get (name.upper (), "button") %}
  {{ _qr_button (name, title, typ, text, disabled = disabled, ** kwargs) }}
{%- endmacro -%} {#- qr_button -#}

{%- macro qr_button_first (page, qr) -%}
  {{ qr_button
      ( page
      , GTW._  ("First")
      , GTW._T ("Display first batch of objects matching the restriction")
      , disabled = not qr.prev_p
      )
  }}
{%- endmacro -%} {#- qr_button_first -#}

{%- macro qr_button_last (page, qr) -%}
  {{ qr_button
      ( page
      , GTW._  ("Last")
      , GTW._T ("Display last batch of objects matching the restriction")
      , disabled = not qr.next_p
      )
  }}
{%- endmacro -%} {#- qr_button_last -#}

{%- macro qr_button_next (page, qr) -%}
  {{ qr_button
      ( page
      , GTW._  ("Next")
      , GTW._T ("Display next batch of objects matching the restriction")
      , disabled = not qr.next_p
      )
  }}
{%- endmacro -%} {#- qr_button_next -#}

{%- macro qr_button_prev (page, qr) -%}
  {{ qr_button
      ( page
      , GTW._  ("Prev")
      , GTW._T ("Display previous batch of objects matching the restriction")
      , disabled = not qr.prev_p
      )
  }}
{%- endmacro -%} {#- qr_button_prev -#}

{%- macro qr_field (name, title, value, label) -%}
  {%- set caller = kwargs.pop ("caller",   None) -%}
  {%- set id = "QR-" + name %}
  <li title="{{ title }}">
    <label for="{{ id }}">
      {{ label or GTW._T (name.capitalize ()) }}
    </label>
    {%- if caller %}
      {{- caller () -}}
    {%- else %}
      {{ X.input.text
          ( id        = id
          , name      = name
          , value     = value
          )
      }}
    {%- endif -%}
  </li>
{%- endmacro -%} {#- qr_field -#}

{%- macro qr_control (page, fields, qr) -%}
  {%- set action = page.abs_href -%}
  {%- set E_Type = page.E_Type %}
  {% call Form.form (action = action, method = "get", class = "QR") -%}
    {{ qr_button
        ( page
        , GTW._  ("Apply")
        , GTW._T ("Display list of objects matching the restriction")
        )
    }}
    {{ qr_button_last  (page, qr) }}
    {{ qr_button_next  (page, qr) }}
    {{ qr_button_prev  (page, qr) }}
    {{ qr_button_first (page, qr) }}
    {{ qr_button
        ( page
        , GTW._  ("Config")
        , GTW._T ("Select the attributes to be displayed for each object")
        , GTW._T ("Select attributes")
        )
    }}
    {{ qr_button
        ( page
        , GTW._  ("Add")
        , GTW._T ("Add a rule to restrict the objects to a specific attribute value")
        , GTW._T ("Add restriction")
        )
    }}
    <input class="value hidden" name="fields" {# -#}
      value="{{ GTW.attr_join (',', fields, 'name') }}"{# -#}
    >
    <ul class="limits">
      {{ qr_field
          ( "limit"
          , GTW._T ("Limit number of entities displayed")
          , qr.limit
          )
      }}
      {{ qr_field
          ( "offset"
          , GTW._T ("Number of first entity to display")
          , qr.offset_f
          )
      }}
      {% call qr_field
          ( "order_by"
          , GTW._T ("Field(s) to use for ordering entities")
          , GTW._T ("Order by")
          )
      %}
        {{ X.input.text
            ( name      = "order_by"
            , value     = qr.order_by_names
            , class     = "value hidden"
            )
        }}
        {{ X.input.text
            ( id        = "QR-order_by"
            , value     = qr.order_by_ui_names
            , disabled  = True
            , class     = "value display"
            )
        }}
      {% endcall %} {# qr_field #}
    </ul>
    {{ attr_filter_table (qr.filters) }}
  {% endcall %} {# form #}
{%- endmacro -%} {#- qr_control -#}

{%- macro select_attr_form () -%}
  <form class = "QR select-attr" {# -#}
      title="{{ GTW._T ("Select the attributes to be displayed for each object") }}"{# -#}
  >
    <ul class="attributes"></ul>
    <ul class="prototype hidden">
      <li>
        <a class="button disabler"></a>
        <b></b>
      </li>
    </ul>
    {{ _qr_button
        ( GTW._  ("Apply")
        , GTW._T ("Use set of attributes currently displayed in form")
        )
    }}
    {{ _qr_button
        ( GTW._  ("Cancel")
        , GTW._T ("Leave form without changing set of attributes to display")
        )
    }}
    {{ _qr_button
        ( GTW._  ("Clear")
        , GTW._T ("Reset form to default")
        )
    }}
    {{ _qr_button
        ( GTW._  ("Add")
        , GTW._T ("Add an attribute to be displayed")
        , text = GTW._T ("Add attribute")
        )
    }}
  </form>
{%- endmacro -%} {#- select_attr_form -#}

{%- macro vip_button (page, cls ="") -%}
  {%- if page.vip_button_p %}
    {%- set text = GTW._T ("Create new %s") % page.E_Type.ui_name.lower () %}
    <p>
      <a href="{{ page.href_create () }}"{#--#}
         title="{{ text }}"{#--#}
         class="button vip {{ cls }}"{#--#}
      >{{ text }}</a>
    </p>
  {% endif -%}
{%- endmacro -%} {#- vip_button -#}

{%- macro admin_table (page, fields, objects) -%}
  {%- set E_Type = page.E_Type %}
  <table class="Object-List">
    <thead>
      <tr>
        {{ obj_create_button (page, E_Type, "th") }}
        {% for f in fields %}
          <th scope="col" title="{{ f.description }}">{{ f.ui_name }}</th>
        {% endfor %}
        {{ obj_create_button (page, E_Type, "th") }}
      </tr>
    </thead>
    <tbody>
      {% for o in objects %}
        <tr id="pk-{{ o.pid }}">
          {{ obj_button (page, E_Type, "td", o.href_change (), o.pid, GTW._T ("Change object"), "pencil", "change") }}
          {% for f, v in o.fields %}
            {%- set align =
                   (" class=\"align-%s\"" % (f.attr.css_align, ))
                if f.attr.css_align else ""
            -%}
            <td{{ align }}>{{ v }}</td>
          {% endfor %}
          {{ obj_button (page, E_Type, "td", o.href_delete (), o.pid, GTW._T ("Delete object"), "trash", "delete", "delete") }}
        </tr>
      {% endfor %}
    </tbody>
  </table>
{%- endmacro -%} {#- admin_table -#}

{%- macro admin (page, fields, objects) -%}
  {{ vip_button (page, "top") }}
  {{ qr_control  (page, fields, page.query_restriction) }}
  {{ admin_table (page, fields, objects) }}
  {{ vip_button (page, "bot") }}
{%- endmacro -%} {#- admin -#}

{#- __END__ jinja template: html/e_type.m.jnj -#}
