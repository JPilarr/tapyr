{#- jinja template: field.jnj -#}
{#
## Copyright (C) 2010 Mag. Christian Tanzer All rights reserved
## Glasauergasse 32, A--1130 Wien, Austria. tanzer@swing.co.at
## ****************************************************************************
## This template is part of the package JNJ.
##
## This template is free software: you can redistribute it and/or modify
## it under the terms of the GNU Affero General Public License as published by
## the Free Software Foundation, either version 3 of the License, or
## (at your option) any later version.
##
## This template is distributed in the hope that it will be useful,
## but WITHOUT ANY WARRANTY; without even the implied warranty of
## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
## GNU Affero General Public License for more details.
##
## You should have received a copy of the GNU Affero General Public License
## along with this template. If not, see <http://www.gnu.org/licenses/>.
## ****************************************************************************
##
##++
## Name
##    html/field.jnj
##
## Purpose
##    Provide macros for rendering fields of a html form
##
## Revision Dates
##    14-Jan-2010 (CT) Creation
##    15-Jan-2010 (MG) `password` added
##    30-Jan-2010 (MG) `hidden` added
##    30-Jan-2010 (MG) `_field` id corrected
##     3-Feb-2010 (CT) `date` and other types added
##     3-Feb-2010 (CT) `number` and `string` changed to set `css_class`
##                     dependent on `max_value` and `max_length`, respectively
##    18-Feb-2010 (MG) `named_object` added
##    ««revision-date»»···
##--
#}

{%- import html_version as X -%}

{%- macro date (fo, fi) -%}
  {{ _field (X.input.date, fo, fi) }}
{%- endmacro -%} {#- date -#}

{%- macro datetime (fo, fi) -%}
  {{ _field (X.input.datetime, fo, fi) }}
{%- endmacro -%} {#- datetime -#}

{%- macro email (fo, fi) -%}
  {{ _field (X.input.email, fo, fi) }}
{%- endmacro -%} {#- email -#}

{%- macro hidden (fo, fi) -%}
  {{ _field (X.input.hidden, fo, fi)}}
{%- endmacro -%} {#- hidden -#}

{%- macro named_object (fo, fi) -%}
  {%- set id = fo.get_id (fi) %}
  {{ X.input.select
      ( name     = id
      , id       = "F_%s"|format (id)
      , choices  = fi.choices
      , selected = fo.get_raw (fi)
      )
  }}
{%- endmacro -%} {#- named_object -#}

{%- macro number (fo, fi) -%}
  {%- set css_class = "Short" if (fi.max_value or 2**31) <= 99999 else "" %}
  {{ _field
      ( X.input.number, fo, fi
      , class         = " ".join ((fi.css_class or "", css_class)).strip ()
      , max           = fi.max_value
      , min           = fi.min_value
      )
  }}
{%- endmacro -%} {#- number -#}

{%- macro password (fo, fi) -%}
  {{ _field (X.input.password, fo, fi) }}
{%- endmacro -%} {#- password -#}

{%- macro string (fo, fi) -%}
  {%- set css_class = "Short" if (fi.max_length or 2**31) <= 6 else "" %}
  {{ _field
      ( X.input.text, fo, fi
      , class         = " ".join ((fi.css_class or "", css_class)).strip ()
      , max_length    = fi.max_length
      )
  }}
{%- endmacro -%} {#- string -#}

{%- macro text (fo, fi) -%}
  {{ _field
      ( X.input.textarea, fo, fi
      , cols          = fi.cols or 80
      , max_length    = fi.max_length
      , rows          = fi.rows or 5
      )
  }}
{%- endmacro -%} {#- text -#}

{%- macro time (fo, fi) -%}
  {{ _field (X.input.time, fo, fi) }}
{%- endmacro -%} {#- time -#}

{%- macro _field (typ, fo, fi) -%}
  {%- set id = fo.get_id (fi) %}
  {{ typ
      ( id            = "F_%s"|format (id)
      , name          = id
      , value         = fo.get_raw (fi)
      , ** kwargs
      )
  }}
{%- endmacro -%} {#- _field -#}

{#- __END__ jinja template: field.jnj -#}
