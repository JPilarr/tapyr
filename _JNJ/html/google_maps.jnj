{%- extends site_base or "html/base.jnj" %}
{#- jinja template: google_maps.jnj -#}
{#
## Copyright (C) 2010-2012 Mag. Christian Tanzer All rights reserved
## Glasauergasse 32, A--1130 Wien, Austria. tanzer@swing.co.at
## ****************************************************************************
## This template is part of the package JNJ.
##
## This template is free software: you can redistribute it and/or modify
## it under the terms of the GNU Affero General Public License as published by
## the Free Software Foundation, either version 3 of the License, or
## (at your option) any later version.
##
## This template is distributed in the hope that it will be useful,
## but WITHOUT ANY WARRANTY; without even the implied warranty of
## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
## GNU Affero General Public License for more details.
##
## You should have received a copy of the GNU Affero General Public License
## along with this template. If not, see <http://www.gnu.org/licenses/>.
## ****************************************************************************
##
##++
## Name
##    html/google_maps.jnj
##
## Purpose
##    Template and macros for a page with embedded google map
##
## Revision Dates
##    24-Feb-2010 (CT) Creation (ported from Django template)
##     4-Dec-2012 (CT) Remove `http:` (--> protocol-relative)
##    ««revision-date»»···
##--
#}

{#-
## map types
// G_NORMAL_MAP, G_SATELLITE_MAP, G_HYBRID_MAP, G_PHYSICAL_MAP
## map control types
// GLargeMapControl, GSmallMapControl
## map-type control types
// GMapTypeControl, GMenuMapTypeControl
-#}

{%- macro body (page) -%}
  <div id="gmap" style="height: {{ page.map.height|default(800) }}px; width: {{ page.map.width|default(800) }}px"></div>
{%- endmacro -%} {#- body -#}

{%- macro head (page) -%}
  <script src="//maps.google.com/maps?file=api&v=2&key={{ page.map.google_key }}&language={{ page.map.language|default("en") }}"
          type="text/javascript"></script>
  <script type="text/javascript">
    //<![CDATA[
      function load() {
        if (GBrowserIsCompatible ()) {
          var mapdiv = document.getElementById ("gmap");
          var map  = new GMap2   (mapdiv);
          var pnt  = new GLatLng ({{ page.map.latitude }}, {{ page.map.longitude }});
          var mark = new GMarker (pnt, {title: "{{ page.map.title }}"});
          var mrkx;
          map.enableGoogleBar ();
          map.enableScrollWheelZoom ();
          map.addControl
            (new {{ page.map.Map_Control|default("GLargeMapControl") }} ());
          map.addControl
            (new {{ page.map.Typ_Control|default("GMenuMapTypeControl") }} ());
          map.addControl (new GOverviewMapControl ());
          map.setCenter  (pnt, {{ page.map.scale|default(14) }});
          map.addOverlay (mark);
          {% if page.map.pan -%}
            map.panDirection ({{ page.map.pan.dx }}, {{ page.map.pan.dy }});
          {% endif -%}
          {%- for marker in page.map.markers %}
            mrkx = new GMarker
              ( new GLatLng
                  ({{ marker.latitude }}, {{ marker.longitude }})
              , {title: "{{ marker.title }}"}
              );
            map.addOverlay (mrkx);
            {%- if marker.blowup %}
              mrkx.showMapBlowup
                ( {{ marker.blowup.scale|default(16) }}
                , {{ marker.blowup.type|default("G_HYBRID_MAP") }}
                );
            {% endif -%}
          {% endfor -%}
          {%- if page.map.blowup %}
            {% if page.map.blowup.latitude and page.map.blowup.longitude %}
              pnt = new GLatLng
                ( {{ page.map.blowup.latitude }}
                , {{ page.map.blowup.longitude }}
                );
              map.showMapBlowup
                ( pnt
                , { zoomLevel : {{ page.map.blowup.scale|default(16) }}
                  , mapType   : {{ page.map.blowup.type|default("G_HYBRID_MAP") }}
                  }
                );
            {%- else %}
              mark.showMapBlowup
                ( {{ page.map.blowup.scale|default(16) }}
                , {{ page.map.blowup.type|default("G_HYBRID_MAP") }}
                );
            {%- endif %}
          {%- endif %}
        }
      }
    //]]>
  </script>
{%- endmacro -%} {#- head -#}

{%- block head_elements -%}
  {{ super () }}
  {%- block gmap_head -%}
    {{ head (page) }}
  {%- endblock gmap_head -%}
{%- endblock head_elements -%}

{%- block body_attrs %} {{ super () }} onload="load()" onunload="GUnload()"
{%- endblock -%}

{%- block document -%}
  {%- block gmap_body -%}
    {{ body (page) }}
  {%- endblock gmap_body -%}
  {{ super () -}}
{%- endblock document -%}

{#- __END__ jinja template: google_maps.jnj -#}
