# -*- coding: iso-8859-1 -*-
# Copyright (C) 2011 Mag. Christian Tanzer All rights reserved
# Glasauergasse 32, A--1130 Wien, Austria. tanzer@swing.co.at
# ****************************************************************************
# This module is part of the package JNJ.
#
# This module is free software: you can redistribute it and/or modify
# it under the terms of the GNU Affero General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This module is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU Affero General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with this module. If not, see <http://www.gnu.org/licenses/>.
# ****************************************************************************
#
#++
# Name
#    html/base.jnj.css
#
# Purpose
#    CSS fragment for template html/base.jnj
#
# Revision Dates
#     1-Jan-2011 (CT) Creation...
#     4-Jan-2011 (CT)         ...finished
#     5-Jan-2011 (CT) `print_sheet` added
#    11-Jan-2011 (CT) `tablesorter` added
#     8-Feb-2011 (CT) s/Required/Necessary/, s/Mandatory/Required/
#    21-Feb-2011 (CT) Use `Border`
#    ««revision-date»»···
#--

### CSS reset rules for HTML elements
### - see http://meyerweb.com/eric/tools/css/reset/...
reset_sheet = Style_Sheet \
    ( Rule
        ( "a", "abbr", "acronym", "address", "article", "aside", "audio"
        , "b", "blockquote", "body"
        , "canvas", "caption", "cite", "code"
        , "dd", "del", "details", "dfn", "div", "dl", "dt"
        , "em", "embed"
        , "fieldset", "figcaption", "figure", "footer", "form"
        , "h1", "h2", "h3", "h4", "h5", "h6", "header", "hgroup"
        , "html"
        , "i", "img", "input", "ins"
        , "kbd"
        , "label", "legend", "li"
        , "mark", "menu"
        , "nav"
        , "object", "ol", "output"
        , "p", "pre"
        , "q"
        , "samp", "section", "small", "span", "strong", "sub", "summary", "sup"
        , "table", "tbody", "td", "textarea", "tfoot", "th", "thead"
        , "time", "tr"
        , "ul"
        , "var", "video"
        , border                   = 0
        , font_size                = Percent (100)
        , font                     = "inherit"
        , margin                   = 0
        , outline                  = 0
        , padding                  = 0
        , vertical_align           = "baseline"
        )
    , Rule
        ( "article", "aside", "details"
        , "figcaption", "figure", "footer", "header", "hgroup"
        , "menu", "nav", "section"
        , display                  = "block"
        )
    , Rule
        ( "blockquote", "q"
        , quotes                   = "none"
        , children                 =
            [ Rule_Pseudo
                ( "before", "after"
                , content          = "none"
                )
            , Rule_Pseudo
                ( "before", "after"
                , content          = "''"
                )
            ]
        )
    , Rule ("body", line_height     = 1.44)
    , Rule ("del",  ** P.del_spec)
    , Rule ("hr",   ** P.hr_spec)
    , Rule ("ins",  ** P.ins_spec)
    , Rule ("sub",  font_size = "smaller", vertical_align  = "text-bottom")
    , Rule ("sup",  font_size = "smaller", vertical_align  = "text-top")
    , Rule
        ( "table"
        , border_collapse          = "collapse"
        , border_spacing           = 0
        )
    , Rule_Pseudo
        ( "focus"
        , outline                  = P.outline_focus
        , ** P.color_spec_selected
        )
    , Rule_Pseudo
        ( "target"
        , outline                  = P.outline_target
        , ** P.color_spec_selected
        )
    )
base_sheet = Style_Sheet \
    ( Rule
        ( "html"
        , height                   = Percent (100)
        , kits                     = [P.color_spec_normal, P.font_spec_normal]
        , overflow                 = "auto"
        )
    , Rule
        ( "body"
        , height                   = Percent (100)
        , margin                   = TRBL (Em (0.2), Em (0.5))
        )
    , Rule
        ( "blockquote"
        , margin_left              = Em (2.5)
        )
    , Rule
        ( "caption"
        , text_align               = "center"
        )
    , Rule ("em", ".em", ** P.font_spec_em)
    , Rule
        ( "fieldset"
        , border                   = P.border_simple
        , padding                  = P.input_padding
        )
    , Rule
        ( "form div"
        , margin                   = TRBL0 (t = Em (0.25), b = Em (0.5))
        )
    , Rule
        ( * tuple ("h%s" % (i+1) for i in range (6))
        , ** P.font_spec_em
        )
    , Rule ("h1", font_size = P.h1_font_size)
    , Rule ("h2", font_size = P.h1_font_size -  5)
    , Rule ("h3", font_size = P.h1_font_size - 10)
    , Rule ("h4", font_size = P.h1_font_size - 15)
    , Rule ("h5", font_size = P.h1_font_size - 20)
    , Rule ("h6", font_size = P.h1_font_size - 25)
    , Rule
        ( "img", "object"
        , max_width                = Percent (100)
        )
    , Rule
        ( "input", "select", "textarea"
        , border                   = P.border_simple
        , font_family              = "inherit"
        , padding                  = P.input_padding
        , children                 =
            [ Rule_Pseudo
                ( "focus"
                , outline          = P.outline_focus
                , ** P.color_spec_selected
                )
            ]
        )
    , Rule
        ( "input"
        , children                 =
            [ Rule_Attr ("[type=checkbox]", vertical_align = "bottom")
            , Rule_Attr ("[type=radio]",    vertical_align = "text-bottom")
            ]
        )
    , Rule
        ( "legend"
        , font_weight              = "bold"
        , padding_bottom           = Em (1./2)
        )
    , Rule
        ( "ol"
        , list_style               = "decimal outside"
        , margin_bottom            = Em (0.5)
        , padding_left             = Em (2.5)
        , children                 =
            [ Rule
                ( "ol"
                , list_style       = "upper-alpha"
                , margin           = TRBL0 (b = Em (0.5), l = Em (0.5))
                , children         =
                    [ Rule
                        ( "ol"
                        , list_style = "lower-alpha"
                        , children   =
                            [ Rule ("ol", list_style = "lower-roman")
                            ]
                        )
                    ]
                )
            ]
        )
    , Rule ("p",        margin_bottom = Em (0.5))
    , Rule ("pre",      ** P.font_spec_pre)
    , Rule ("strong",   font_weight = "bold")
    , Rule ("textarea", ** P.font_spec_pre)
    , Rule
        ( "ul"
        , list_style               = "disc outside"
        , margin_bottom            = Em (0.5)
        , padding_left             = Em (1.0)
        , children                 =
            [ Rule
                ( "ul"
                , list_style       = "square"
                , children         =
                    [ Rule
                        ( "ul"
                        , list_style = "circle"
                        , children   =
                            [ Rule
                                ( "ul"
                                , list_style = "disc"
                                )
                            ]
                        )
                    ]
                )
            ]
        )
    )
style_sheet = Style_Sheet \
    ( Rule
        ( "a"
        , text_decoration      = "none"
        , children             =
            [ Rule_Pseudo ("hover", ** P.color_spec_selected)
            ]
        )
    , Rule
        ( "input", "select", "textarea"
        , children  =
            [ Rule_Class
                ( "Required"
                , border_width = Px (2)
                )
            , Rule_Class
                ( "Necessary"
                , border_width = TRBL0 (b = Px (2), default = Px (1))
                )
            ]
        )
    , Rule
        ( "input[type=submit]", "input[type=reset]", "button", "a.button"
        , ** P.button_spec
        )
    , Rule
        ( "tbody tr"
        , children             =
            [ Rule_Pseudo ("nth-child(2n+1)", ** P.color_spec_row1)
            , Rule_Pseudo ("nth-child(2n)",   ** P.color_spec_row2)
            , Rule_Pseudo ("target",          ** P.color_spec_selected)
            ]
        )
    , Rule
        ( "thead tr"
        , ** P.nav_col.color_spec_heading
        )
    , Rule
        ( "td", "th"
        , padding              = TRBL (Em (0.15), Em (0.25))
        , vertical_align       = "top"
        , children             =
            [ Rule_Attr
                ( "[colspan]"
                , text_align   = "center"
                )
            , Rule_Child
                ( "em"
                , color        = P.color_selected
                , font_size    = P.h1_font_size
                , font_weight  = P.h1_font_weight
                , width        = "100%"
                )
            , Rule_Child
                ( "strong"
                , color        = SVG_Color ("blue")
                , padding      = TRBL0 (l = Em (1./2), r = Em (1./2))
                , width        = "100%"
                )
            ]
        )
    ### CSS rules for overall layout
    , Rule
        ( ".pg_head"
        , height        = P.pg_head_height
        , kits          = [P.color_spec_pg_head]
        , overflow      = "hidden"
        )
    , Rule
        ( ".pg_main"
        , clear         = "both"
        , max_width     = P.pg_main_max_width
        , min_width     = P.pg_main_min_width
        , overflow      = "auto"
        , padding_left  = P.nav_col.full_width + P.col_padding
        , children      =
            [ Rule_Child
                ( "div", "nav"
                , float        = "left"
                , position     = "relative"
                )
            , Rule_Child
                ( "nav"
                , background_color = P.nav_col.background_color
                , font_size        = "small"
                , line_height      = 1.35
                , margin_left      = Percent (-100)
                , padding          = TRBL (Em (1./4), P.col_padding, 0)
                , right            = P.nav_col.width + 3 * P.col_padding
                , width            = P.nav_col.width
                )
            ]
        )
    , Rule
        ( ".pg_body"
        , width          = "100%"
        , children       =
            [ Rule ("p", max_width = Em (40))
            # XXX ??? ".login div", "form.login"
            ]
        )
    , Rule
        ( ".pg_foot"
        , border_top     = P.border_simple
        , clear          = "both"
        , font_size      = Percent (75)
        , margin         = TRBL  (Em (2.5), "auto", Em (0.2))
        , padding        = TRBL0 (Em (1./4))
        , vertical_align = "bottom"
        , width          = Percent (98)
        )
    ### Various classes
    , Rule (".Error-Message", ** P.color_spec_error)
    , Rule (".centered",      text_align = "center")
    , Rule (".clickable",     cursor     = "pointer")
    , Rule
      ( ".deleted"
      , opacity          = 0.8
      , text_decoration  = "line-through"
      )
    , Rule (".hbox",          ** P.hbox_spec)
    , Rule
        ( ".headline"
        , font_size      = P.h1_font_size + 10
        , ** P.color_spec_heading
        )
    , Rule (".just-c",        text_align     = "center")
    , Rule (".just-l",        text_align     = "left")
    , Rule (".just-r",        text_align     = "right")
    , Rule (".large",         font_size      = Percent (120))
    , Rule (".normal",        ** P.color_spec_normal)
    , Rule ("a.nospam",       color          = P.link_color)
    , Rule ("p.nospam",       display        = "inline")
    , Rule (".placeholden",   color          = P.color_dark_grey)
    , Rule (".vbox",          float          = "left")
    , Rule (".vboxr",         float          = "right")
    , Rule (".vert-b",        vertical_align = "bottom")
    , Rule (".vert-m",        vertical_align = "middle")
    , Rule (".vert-t",        vertical_align = "top")
    , Rule (".w1o2",          width          = Percent (50))
    , Rule (".w1o3",          width          = Percent (100./3))
    , Rule (".w1o4",          width          = Percent (25))
    , Rule (".w1o5",          width          = Percent (20))
    , Rule (".w2o3",          width          = Percent (200./3))
    , Rule (".w2o5",          width          = Percent (40))
    , Rule (".w3o4",          width          = Percent (75))
    , Rule (".w3o5",          width          = Percent (60))
    , Rule (".w4o5",          width          = Percent (80))
    , Rule
        ( ".vbox:last-child", ".w1o1"
        , display        = "block"
        , float          = "none"
        , width          = "auto"
        )
    , Rule
        ( "img.centered"
        , display        = "block"
        , height         = "auto"
        , margin         = "auto"
        , width          = "auto"
        )
    , Rule
        ( "img.pixpanded"
        , display        = "block"
        , float          = "none"
        , height         = "auto"
        , margin         = "auto"
        , padding        = TRBL (Px (5), 0)
        , width          = "auto"
        )
    , Rule
        ( ".section + .section"
        , margin_top     = Em (0.5)
        )
    ### CSS arrows
    ###     http://www.dinnermint.org/blog/css/creating-triangles-in-css/
    , Rule
        ( * tuple ("css-arrow-%s" % k for k in ("d", "l", "r", "u"))
        , border_style   = "solid"
        , display        = "inline-block"
        , height         = 0
        , width          = 0
        )
    , Rule
        ( ".css-arrow-d"
        , Border
            ( color = TRBL0 (default = "transparent",     t = P.css_arrow_color)
            , width = TRBL0 (default = P.css_arrow_width, b = 0)
            )
        )
    , Rule
        ( ".css-arrow-l"
        , Border
            ( color = TRBL0 (default = "transparent",     r = P.css_arrow_color)
            , width = TRBL0 (default = P.css_arrow_width, l = 0)
            )
        )
    , Rule
        ( ".css-arrow-r"
        , Border
            ( color = TRBL0 (default = "transparent",     l = P.css_arrow_color)
            , width = TRBL0 (default = P.css_arrow_width, r = 0)
            )
        )
    , Rule
        ( ".css-arrow-u"
        , Border
            ( color = TRBL0 (default = "transparent",     b = P.css_arrow_color)
            , width = TRBL0 (default = P.css_arrow_width, t = 0)
            )
        )
    ### ReST specific
    , Rule
        ( "hr.docutils"
        , clear          = "right"
        )
    , Rule
        ( "img.align-left"
        , float          = "left"
        , margin         = TRBL0 (t = Px (1), b = Px (1), r = Px (5))
        )
    , Rule
        ( "img.align-right"
        , float          = "right"
        , margin         = TRBL0 (t = Px (1), b = Px (1), l = Px (5))
        )
    , Rule
        ( "pre.literal-block"
        , font           = P.font_family_normal
        , padding_left   = Em (5)
        )
    , Rule
        ( ".docutils p"
        , border         = 0
        , margin         = TRBL0 (Em (1./5))
        , padding        = 0
        , children       =
            [ Rule_Class ("first", margin = 0)
            , Rule_Class ("last",  margin = TRBL (Em (1./5), 0))
            ]
        )
    ### Grid-Table
    , Rule
        ( ".grid-table"
        , border                   = P.grid_table_border
        , border_collapse          = "collapse"
        , margin_left              = Em (1./2)
        , children                 =
            [ Rule
                ( "thead th"
                , font_weight      = "bold"
                , text_align       = "center"
                , ** P.color_spec_heading
                )
            , Rule
                ( "td", "th"
                , border           = P.grid_table_border
                , padding          = TRBL (Em (0.05), Em (0.25))
                )
            ]
        )
    ### tablesorter
    , Rule
        ( "table.tablesorter"
        , children                 =
            [ Rule
                ( "th.sortable"
                , cursor           = "pointer"
                )
            ]
        )
    )

print_sheet = Style_Sheet \
    ( Media.Rule
        ( Media.Query ("print")
        , rules                   =
            [ Rule
                ( "@page"
                , margin          = Cm (2.5)
                )
            , Rule
                ( "*"
                , background      = "transparent !important"
                , color           = "black !important"
                )
            , Rule
                ( "a"
                , color           = "#000033 !important"
                , text_decoration = "none"
                , children        =
                    [ Rule_Attr
                        ( "[href]:after"
                        , content   = """ " [" attr(href) "]" """.strip ()
                        , font_size = "smaller"
                        )
                    , Rule_Class
                        ( "button"
                        , display   = "none"
                        )
                    ]
                )
            , Rule
                ( "html", ".pg_main", ".pg_foot", ".pg_head"
                , border          = 0
                , margin          = 0
                , padding         = 0
                , width           = "auto"
                )
            , Rule
                ( "body"
                , border          = 0
                , font_size       = Pt (10)
                , height          = "auto"
                , min_width       = 0
                , padding_right   = 0
                , width           = "auto"
                , ** P.font_spec_print
                )
            , Rule
                ( "em", ".em"
                , ** dict
                    (P.font_spec_print, font_style = "italic")
                )
            , Rule
                ( "strong"
                , ** dict
                    (P.font_spec_print, font_weight = "bold")
                )
            , Rule
                ( "pre"
                , ** dict
                    (P.font_spec_print, font_family = P.font_family_pre)
                )
            , Rule ("thead", display = "table-header-group")
            , Rule
                ( ".pg_body"
                , max_width       = Em (45)
                )
            , Rule
                ( ".pg_foot"
                , bottom          = 0
                , font_size       = Percent (75)
                , left            = 0
                , position        = "fixed"
                , width           = Percent (100)
                )
            , Rule
                ( ".pg_head"
                , color           = "#666666 !important"
                , height          = "auto"
                )
            , Rule
                ( ".pg_head .logo", ".pg_nav"
                , display         = "none"
                , visibility      = "collapse"
                )
            ]
        )
    , rank  = 1 << 16
    )
### __END__ html/base.jnj.css
