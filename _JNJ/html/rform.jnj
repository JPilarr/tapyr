{#- jinja template: rform.jnj -#}
{#
## Copyright (C) 2010 Martin Glueck All rights reserved
## Langstrasse 4, A--2244 Spannberg, Austria. martin@mangari.org
## ****************************************************************************
## This template is part of the package JNJ/html.
##
## This template is free software: you can redistribute it and/or modify
## it under the terms of the GNU Affero General Public License as published by
## the Free Software Foundation, either version 3 of the License, or
## (at your option) any later version.
##
## This template is distributed in the hope that it will be useful,
## but WITHOUT ANY WARRANTY; without even the implied warranty of
## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
## GNU Affero General Public License for more details.
##
## You should have received a copy of the GNU Affero General Public License
## along with this template. If not, see <http://www.gnu.org/licenses/>.
## ****************************************************************************
##
##++
## Name
##    JNJ/html.rform
##
## Purpose
##    Form rendering based on the render mode description
##
## Revision Dates
##     5-May-2010 (MG) Creation
##    12-May-2010 (MG) UI-Display style started
##    20-May-2010 (MG) Refactoring of `link_ui_` macros
##    26-May-2010 (MG) Error handling changed
##    27-May-2010 (MG) `inline_table` error handling added
##    28-May-2010 (MG) `link_ui_display_row` guard against empty instance added
##    16-Jun-2010 (MG) `link_display` changed to make the whole row clickable
##    24-Jun-2010 (MG) Button order and text for the popup form are now
##                     specified in the template
##    25-Jul-2010 (MG) Macros for render mode `dl_seq` added
##     4-Aug-2010 (MG) `aid_table` added
##     5-Aug-2010 (MG) `object` gaurd creation of the dialog
##    19-Aug-2010 (CT) popup-form-buttons changed to same sequence as in form
##                     (Save/reset/cancel)
##    19-Aug-2010 (CT) `title` added to all Save/reset/cancel buttons
##    ««revision-date»»···
##--
#}
{%- import "html/form.jnj" as Form %}
{%- import html_version    as X   -%}

{%- macro aid_div_seq (pfo, aid) -%}
  {%- set fo = aid.form -%}
  {%- onion aid.legend %}
    {%- head %}
      <fieldset class="inline-form {{ aid.form_cls.form_path_css }}">
        <legend title="{{ GTW._T (aid.name)|capitalize|safe }}">
          {{ GTW._T (aid.legend)|safe }}
        </legend>
    {%- else %}
      <div class="inline-form {{ aid.name }}">
    {%- body %}
      {{ GTW.render_fofi_widget (fo, "aid_object", fo) }}
    {%- tail %}
      </fieldset>
    {%- else %}
      </div>
  {%- endonion %}
{%- endmacro -%} {#- aid_div_seq -#}

{%- macro aid_header (fo, aid) -%}
  <th class="AI-Field-Header" colspan={{ aid.visible_field_count }}>
    {{- GTW._T (aid.ui_name) -}}
  </th>
{%- endmacro -%} {#- aid_header -#}

{%- macro aid_td (fo, aid) -%}
  {{ form_as_columns (aid.form, "body") }}
{%- endmacro -%} {#- aid_td -#}

{%- macro aid_th (fo, aid) -%}
  {{ form_as_columns (aid.form, "head") }}
{%- endmacro -%} {#- aid_th -#}

{%- macro aid_object (fo) -%}
   {%- if not fo.parent and fo.error_count () %}
     <div class="ui-widget ui-state-error ui-corner-all ui-helper-reset">
        {%- set field, nid = fo.next_erroneous_field () %}
        {%- onion nid %}
          {%- head -%}
          <a href="#F_{{ nid }}"
             title="{{ GTW._T ("Click to jump to the field with the first error") }}"
          >
          {%- body -%}
            {{ fo.error_count () }}
           {{GTW._Tn ("Error", "Errors", fo.error_count ()) }}
          {%- tail -%}
            </a>
        {%- endonion -%}
     </div>
   {% endif -%}
   {%- set foe = fo.get_errors () %}
   {%- if foe %}
     <div class="ui-widget ui-state-error ui-corner-all">
       {{ GTW.call_macro (foe.widget, foe) }}
     </div>
   {% endif -%}
   {%- for hf in fo.hidden_fields %}
     {{ GTW.call_macro (hf.widget, fo, hf) }}
   {% endfor -%}
   {%- for fg in fo.field_groups %}
     {{ GTW.render_fofi_widget (fg, "default", fo, fg) }}
   {% endfor -%}
   {%- if object_caller %}
     {{ object_caller () }}
   {% endif -%}
{%- endmacro -%} {#- aid_object -#}

{%- macro aid_table (pfo, aid) -%}
  {%- set fo = aid.form -%}
  {%- onion aid.legend %}
    {%- head %}
      <fieldset class="inline-form {{ aid.form_cls.form_path_css }}">
        <legend title="{{ GTW._T (aid.name)|capitalize|safe }}">
          {{ GTW._T (aid.legend)|safe }}
        </legend>
    {%- else %}
      <div class="inline-form {{ aid.name }}">
    {%- body %}
      {{ GTW.render_fofi_widget (fo, "aid_object", fo) }}
    {%- tail %}
      </fieldset>
    {%- else %}
      </div>
  {%- endonion %}
{%- endmacro -%} {#- aid_table -#}

{%- macro fi_div_seq (fo, fi) -%}
    <div class="Field-Div-Seq Field-{{ fi.name }}"
         title="{{ GTW._T (fi.description)|safe }}"
    >
      {{ GTW.render_fofi_widget (fi, "help",          fo, fi) }}
      {{ GTW.render_fofi_widget (fi, "label",         fo, fi) }}
      {{ GTW.call_macro (fi.widget [GTW.render_mode], fo, fi) }}
      {{ GTW.render_fofi_widget (fi, "error",         fo, fi) }}
    </div>
{%- endmacro -%} {#- fi_div_seq -#}

{%- macro fi_dl_seq (fo, fi) -%}
  <dt>{{ GTW.render_fofi_widget (fi, "label",         fo, fi) }}</dt>
  <dd>
    <span class="ui-icon-right-container">
      {{- GTW.call_macro (fi.widget [GTW.render_mode], fo, fi) }}
      {{- GTW.render_fofi_widget (fi, "help",          fo, fi) }}
    </span>
    {{- GTW.render_fofi_widget (fi, "error",         fo, fi) -}}
  </dd>
{%- endmacro -%} {#- fi_dl_seq -#}

{%- macro fi_header (fo, fi) -%}
  <th>&nbsp;</th>
{%- endmacro -%} {#- fi_header -#}

{%- macro field_help_icon (fo, fi) -%}
  {%- if fi.description -%}
    {%- set help = GTW._T (fi.description)|safe %}
    <span class="Field-Help ui-icon ui-icon-help" title="{{ help }}">
      {{- help -}}
    </span>
  {%- endif -%}
{%- endmacro -%} {#- field_help_icon -#}

{%- macro fi_th (fo, fi) -%}
  <th>{{ GTW.render_fofi_widget (fi, "label", fo, fi) }}</th>
{%- endmacro -%} {#- fi_th -#}

{%- macro fi_td (fo, fi) -%}
  <td>{{ GTW.call_macro (fi.widget [GTW.render_mode], fo, fi) }}</td>
{%- endmacro -%} {#- fi_td -#}

{%- macro fg_column (fo, fg, kind) -%}
  {%- for fi in fo.fields_of_field_group (fg) %}
    {{ GTW.render_fofi_widget (fi, "field_%s" % (kind, ), fo, fi) }}
  {% endfor -%}
{%- endmacro -%} {#- fg_column -#}

{%- macro fg_div_seq (fo, fg) -%}
  {%- for fi in fo.fields_of_field_group (fg) %}
    {{ GTW.render_fofi_widget (fi, "field", fo, fi) }}
  {% endfor -%}
{%- endmacro -%} {#- fg_div_seq -#}

{%- macro fg_dl_seq (fo, fg) -%}
  <dl>
  {%- for fi in fo.fields_of_field_group (fg) %}
    {{ GTW.render_fofi_widget (fi, "field", fo, fi) }}
  {% endfor -%}
  </dl>
{%- endmacro -%} {#- fg_dl_seq -#}

{%- macro fg_table (fo, fg) -%}
  {%- set errors = [] %}
  <table class="field_group-Horizontal">
    <thead>
      <tr>
        {%- for fi in fo.fields_of_field_group (fg) %}
          {{ GTW.render_fofi_widget (fi, "field_head", fo, fi) }}
        {% endfor -%}
      </tr>
    </thead>
    <tbody>
      <tr>
        {%- for fi in fo.fields_of_field_group (fg) %}
          {{ GTW.render_fofi_widget (fi, "field_body", fo, fi) }}
        {% endfor -%}
      </tr>
    </tbody>
  </table>
  {%- set fge = fo.fields_with_errors_of_field_group (fg, True) %}
  {%- if fge  %}
    {%- for fi in fge -%}
      {{ GTW.render_fofi_widget (fi, "error",         fo, fi) }}
    {%- endfor -%}
  {% endif -%}
  <div class="field_group-Horizontal-Help-Table">
    {%- for fi in fo.fields_of_field_group (fg) %}
      {{ GTW.render_fofi_widget (fi, "help", fo, fi) }}
    {% endfor -%}
  </div>
{%- endmacro -%} {#- fg_table -#}

{%- macro form
        ( action        = ""
        , cancel_kw     = {}
        , method        = "post"
        , next_form_kw  = {}
        , reset_kw      = {}
        , submit_kws    = []
        )
-%}
  <form action="{{ action }}" method="{{ method }}"{{ kwargs|xmlattr }}>
    {{ caller () }}
    <div class="buttons">
      {%- if next_form_kw %}
        {{ X.input.hidden (** next_form_kw) }}
      {% endif -%}
      {%- for submit_kw in submit_kws %}
        {%- if submit_kw %}
          {{ X.input.submit (** submit_kw) }}
        {% endif -%}
      {% endfor -%}
      {%- if reset_kw %}
        {{ X.input.reset  (** reset_kw) }}
      {% endif -%}
      {%- if cancel_kw %}
        {%- set ckw = cancel_kw %}
        {{ X.input.submit
            ( name  = "cancel"
            , title = ckw.title or GTW._T ("Discard all changes and leave form")
            , value = ckw.name  or GTW._T ("Cancel")
            )
        }}
        {{ X.input.hidden (name  = "form-cancel-href", value = ckw.href) }}
      {% endif -%}
    </div>
  </form>
{%- endmacro -%} {#- form -#}

{%- macro form_as_columns (fo, kind) -%}
    {%- if kind == "body" %}
      <td class="ui-helper-hidden">
        {%- for hf in fo.hidden_fields %}
          {{- GTW.call_macro (hf.widget, fo, hf) -}}
        {% endfor -%}
      </td>
    {% endif -%}
    {%- for fg in fo.field_groups %}
     {{ GTW.render_fofi_widget (fg, "fg_column", fo, fg, kind) }}
    {% endfor -%}
{%- endmacro -%} {#- form_as_columns -#}

{%- macro inline_table (fo, inline) -%}
  {#- render the form of the inline as row's of a table -#}
  {%- set proto = inline.prototype_form -%}
  {%- if inline.forms %}
    {%- set fform = inline.forms [0] -%}
  {%- else %}
    {%- set fform = proto -%}
  {% endif -%}
  <fieldset class="inline-form-table {{ inline.form_cls.form_name }}">
    <legend title="{{ inline.name|capitalize }}">{{ GTW._T (inline.legend)|safe }}</legend>
    {{- X.input.hidden
        ( class = " many-2-many-range"
        , value = "%s:%s:%s"|format
            (inline.min_required, inline.form_count, inline.max_count)
        , name  = inline.range_field_name
        , id    = "F_%s"|format (inline.range_field_name)
        )
    -}}
  <table class="field_group-Horizontal">
    <thead>
      {%- if fform.fgs_need_header %}
        <tr>{{ form_as_columns (fform, "header") }}
        </tr>
      {% endif -%}
      <tr>{{ form_as_columns (fform, "head") }}</tr>
    </thead>
    <tbody class="ui-entities-container">
      <tr class="inline-instance inline-prototype">
        {{ form_as_columns (proto, "body") }}
      </tr>
      {%- for iform in inline.forms %}
        <tr class="inline-instance">{{ form_as_columns (iform, "body") }}</tr>
        {%- set foe = iform.errors.of_form (iform) %}
        {%- if foe %}
          <tr class="ui-state-error">
            <td colspan="200">
              {{ GTW.call_macro (foe.widget, foe) }}
            </td>
          </tr>
        {% endif -%}
      {% endfor -%}
    </tbody>
  </table>
  </fieldset>
{%- endmacro -%} {#- inline_table -#}

{%- macro inline_list_display_table (fo, inline) -%}
  {#- render the form of the inline as row's of a table -#}
  <div class="Inline-UI-Display ui-widget {{ inline.form_cls.form_name }}">
    <h3 class="ui-widget-header">
    {{- X.input.hidden
        ( class = " many-2-many-range"
        , value = "%s:%s:%s"|format
            (inline.min_required, inline.form_count, inline.max_count)
        , name  = inline.range_field_name
        , id    = "F_%s"|format (inline.range_field_name)
        )
    -}}
    {%- onion inline.collapsable %}
      {%- head -%}
        <span class="ui-icon ui-icon-circle-triangle-s"></span>
        <a href="#add" class="ui-icon add">{{ GTW._T ("Add") }}</a>
        <a href="#hide">
      {%- else %}
        <a href="#add" class="ui-icon add">{{ GTW._T ("Add") }}</a>
      {%- body %}
        {{- GTW._T (inline.legend)|safe -}}
      {%- tail -%}
        </a>
      {%- endonion %}
  </h3>
  <table>
    <tbody class="ui-entities-container">
      {%- for iform in inline.forms %}
        {{- GTW.render_fofi_widget
             (inline, "link_list_display_row", inline, iform, loop.index0)
        -}}
      {% endfor -%}
    </tbody>
  </table>
  </div>
{%- endmacro -%} {#- inline_list_display_table -#}

{%- macro link_list_display_row (inline, iform, index, include_form = True) -%}
  {%- if iform.fake_or_instance -%}
    {%- set ec = iform.error_count (iform) %}
    <tr class="ui-entity-container {% if include_form and iform.has_substance -%} mom-populated ui-display-changed{%- endif -%}">
      {{- GTW.render_fofi_widget
        (inline, "link_list_display", inline, iform, index, include_form and iform.has_substance)
      -}}
        <td>
          {%- if ec -%}
          <div class="ui-state-error ui-corner-all">
            <span class="ui-icon ui-icon-alert"
                  title="{{ ec }} {{ GTW._Tn ("Error", "Errors", ec) }}"
            >Errors</span>
          </div>
          {%- endif -%}
        </td>
      <td class="ui-3-icons-width">
        {%- for title in "Edit", "Copy", "Delete" -%}
          {%- set tr = GTW._T (title) -%}
          <a class="ui-icon" href="#{{ title|lower}}" title="{{ tr }}">{{ tr}}</a>
        {%- endfor -%}
      </td>
    </tr>
  {%- endif -%}
{%- endmacro -%} {#- link_list_display_row -#}

{%- macro link_list_display (inline, form, index, include_form) -%}
  {%- set link = form.instance -%}
  {%- for value in inline.list_display_values (link) -%}
    <td class="ui-display">
      {%- if loop.first -%}
        {%- if include_form %}
          {%- set popup_form = True %}
          {%- include "html/dynamic_form.jnj" with context %}
        {%- else %}
          {%- for pas, name, css in inline.initial_pid_and_state (link, index) -%}
            {{- X.input.hidden ( value = pas, name = name, class= css) -}}
          {%- endfor -%}
        {% endif -%}
      {%- endif -%}
        {%- onion True -%}
          {%- head -%}
            <a href="#edit" title="{{ GTW._T ("Edit") }}">
          {%- body %}
            {{- value -}}
          {%- tail -%}
            </a>
          {%- endonion -%}
    </td>
  {%- endfor -%}
{%- endmacro -%} {#- link_list_display -#}

{%- macro object (fo, render_mode = None) -%}
  {#- Create a form for a form-object `fo` -#}
  {%- set object_caller = kwargs.pop ("caller", None) -%}
  {%- set cancel_href   = kwargs.pop ("cancel_href", fo.kw.cancel_href) -%}
  {%- set cancel_kw     = dict
        ( href  = cancel_href
        , title = GTW._T ("Discard all changes and leave form")
        ) if cancel_href else {}
  -%}
  {%- set submit_kws    = kwargs.pop ("submit_kws", None) %}
  {% call form
      ( action     = fo.action
      , class      = fo.css_class
      , cancel_kw  = cancel_kw
      , reset_kw   = dict
          ( title  = GTW._T ("Discard all changes")
          , value  = GTW._T ("Reset")
          )
      , submit_kws = submit_kws or
          [ dict
              ( title = GTW._T ("Send form data to server and leave form")
              , value = GTW._T ("Submit")
              )
          ]
      , ** kwargs
      )
  -%}
    {{ GTW.render_fofi_widget
         (fo, "aid_object", fo, render_mode = render_mode)
    }}
    {%- if fo.inline_groups %}
      <div id="form-dialog">
        <div id="popup-form-buttons">
          <!-- The order of the buttons has to be specified from left to right -->
          <button id="popup-form-button-save" title="{{ GTW._T ("Save values in form entries") }}">
            {{- GTW._T ("Save") -}}
          </button>
          <button id="popup-form-button-reset" title="{{ GTW._T ("Discard all changes made") }}">
            {{- GTW._T ("Reset") -}}
          </button>
          <button id="popup-form-button-cancel" title="{{ GTW._T ("Discard all changes made and leave popup-form") }}">
            {{- GTW._T ("Cancel") -}}
          </button>
        </div>
      </div>
     {% endif -%}
  {% endcall %} {# form #}
{%- endmacro -%} {#- object -#}
{#- __END__ jinja template: JNJ/html.rform.jnj -#}
