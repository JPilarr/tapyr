{#- jinja template: input.jnj -#}
{#
## Copyright (C) 2011-2012 Mag. Christian Tanzer All rights reserved
## Glasauergasse 32, A--1130 Wien, Austria. tanzer@swing.co.at
## #*** <License> ************************************************************#
## This template is part of the package JNJ.
##
## This template is free software: you can redistribute it and/or modify
## it under the terms of the GNU Affero General Public License as published by
## the Free Software Foundation, either version 3 of the License, or
## (at your option) any later version.
##
## This template is distributed in the hope that it will be useful,
## but WITHOUT ANY WARRANTY; without even the implied warranty of
## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
## GNU Affero General Public License for more details.
##
## You should have received a copy of the GNU Affero General Public License
## along with this template. If not, see <http://www.gnu.org/licenses/>.
## #*** </License> ***********************************************************#
##
##++
## Name
##    html/AFS/input.jnj
##
## Purpose
##    Provide macros for input elements of GTW.AFS forms
##
## Revision Dates
##    21-Mar-2011 (CT) Creation
##    29-Mar-2011 (CT) `_field` changed to set `readonly`, if necessary
##     4-Nov-2011 (CT) Change `_field` to only set `class` if necessary
##     4-Nov-2011 (CT) Add `named_object`, change `named_value` to use `select`
##    30-Nov-2011 (CT) Change `_field` to add `required` to `kw`
##     2-Dec-2011 (CT) Add `id_entity`; remove argument `form` from signatures
##     5-Dec-2011 (CT) Add support for keyword arguments to all macros here
##    21-Dec-2011 (CT) Add `title` to display-input of `id_entity`
##     5-Aug-2012 (MG) Add `media_browser`
##    ««revision-date»»···
##--
#}

{%- import html_version as X -%}

{%- macro boolean (elem) -%}
  {%- set kw = {} if not elem.cooked else dict (checked = "checked") %}
  {{ _field (X.input.checkbox, elem, ** kw) }}
{%- endmacro -%} {#- boolean -#}

{%- macro date (elem) -%}
  {{ _field (X.input.date, elem, ** kwargs) }}
{%- endmacro -%} {#- date -#}

{%- macro datetime (elem) -%}
  {{ _field (X.input.datetime, elem, ** kwargs) }}
{%- endmacro -%} {#- datetime -#}

{%- macro email (elem) -%}
  {{ _field (X.input.email, elem, ** kwargs) }}
{%- endmacro -%} {#- email -#}

{%- macro hidden (elem) -%}
  {{ _field (X.input.hidden, elem, ** kwargs) }}
{%- endmacro -%} {#- hidden -#}

{%- macro id_entity (elem) -%}
  {%- set class = kwargs.pop ("class", None)  %}
  {{ X.input.text
      ( class     = GTW.filtered_join (" ", (class, "hidden"))
      , name      = elem.name
      , value     = elem.edit
      )
  }}
  {{ _field
      ( X.input.text, elem
      , class     = GTW.filtered_join (" ", (class, "display"))
      , disabled  = True
      , name      = None
      , title     = elem.ui_display
      , value     = elem.ui_display
      )
  }}
{%- endmacro -%} {#- id_entity -#}

{%- macro media_browser (elem) -%}
  {{ _field (X.input.hidden, elem, class="afs-media-url") }}
  <button class="ui-button ui-state-default afs-media-button" id="B::{{ elem.id }}">
    {{ GTW._T ("Choose file") }}
  </button>
{%- endmacro -%} {#- media_browser -#}

{%- macro named_value (elem) -%}
  {%- set kw = GTW.dict
      ( choices  = elem.choices
      , id       = elem.id
      , name     = elem.name
      , selected = elem.edit
      )
  -%}
  {%- do kw.update (kwargs) %}
  {{ X.input.select (** kw) }}
{%- endmacro -%} {#- named_value -#}

{%- macro named_object (elem) -%}
  {%- set kw = GTW.dict
      ( choices  = elem.choices
      , id       = elem.id
      , name     = elem.name
      , selected = elem.edit
      )
  -%}
  {%- do kw.update (kwargs) %}
  {{ X.input.select_v (** kw) }}
{%- endmacro -%} {#- named_object -#}

{%- macro number (elem) -%}
  {%- set kw = GTW.dict
      ( max           = elem.max_value
      , min           = elem.min_value
      )
  -%}
  {%- do kw.update (kwargs) %}
  {{ _field (X.input.number, elem, ** kw) }}
{%- endmacro -%} {#- number -#}

{%- macro password (elem) -%}
  {{ _field (X.input.password, elem, ** kwargs) }}
{%- endmacro -%} {#- password -#}

{%- macro string (elem) -%}
  {%- set kw = GTW.dict (max_length = elem.max_length) -%}
  {%- do kw.update (kwargs) %}
  {{ _field (X.input.text, elem, ** kw) }}
{%- endmacro -%} {#- string -#}

{%- macro text (elem) -%}
  {%- set kw = GTW.dict
      ( cols          = elem.cols or 80
      , max_length    = elem.max_length
      , rows          = elem.rows or 32
      )
  -%}
  {%- do kw.update (kwargs) %}
  {{ _field (X.input.textarea, elem, ** kw)
  }}
{%- endmacro -%} {#- text -#}

{%- macro time (elem) -%}
  {{ _field (X.input.time, elem, ** kwargs) }}
{%- endmacro -%} {#- time -#}

{%- macro _field (typ, elem) -%}
  {%- set id = elem.id -%}
  {%- set kw = GTW.dict
      ( id            = id
      , name          = elem.name
      , value         = elem.edit
      )
  -%}
  {%- do kw.update (kwargs) -%}
  {%- if elem.css_class %}
    {%- do kw.update
      (class = GTW.filtered_join (" ", (kw.get ("class", ""), elem.css_class)))
    %}
  {% endif -%}
  {%- if elem.prefilled or elem.readonly -%}
    {%- do kw.setdefault ("readonly", "readonly") -%}
    {%- do kw.setdefault ("title", GTW._T ("Cannot be changed")) -%}
  {%- endif -%}
  {%- if elem.required %}
    {%- do kw.update (required = True) %}
  {% endif -%}
  {{ typ (** kw) }}
{%- endmacro -%} {#- _field -#}

{#- __END__ jinja template: html/AFS/input.jnj -#}
